{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\Desktop\\\\EserciziProgrammazione\\\\React\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Give your feedback!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Increment(good, setGood),\n        children: \"Good! :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Increment(neutral, setNeutral),\n        children: \"Neutral :|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Increment(bad, setBad),\n        children: \"Bad! :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nconst Increment = (value, setValue) => {\n  return setValue(value + 1);\n};\n\n_c2 = Increment;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  let total = good + neutral + bad;\n  let positiveFeedback = good / total * 100;\n  let average = (good - bad) / total;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), \"Good: \", good, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this), \"Neutral: \", neutral, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this), \"Bad: \", bad, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this), \"All: \", total, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this), \"Average score: \", average, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }, this), \"Positive feedback: \", positiveFeedback, \"% \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Statistics;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Increment\");\n$RefreshReg$(_c3, \"Statistics\");","map":{"version":3,"sources":["C:/Users/Utente/Desktop/EserciziProgrammazione/React/unicafe/src/App.js"],"names":["React","useState","App","good","setGood","neutral","setNeutral","bad","setBad","Increment","value","setValue","Statistics","total","positiveFeedback","average"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;AAIA,sBACE;AAAA,2BACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAIQ,SAAS,CAACN,IAAD,EAAOC,OAAP,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,MAAIK,SAAS,CAACJ,OAAD,EAAUC,UAAV,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAIG,SAAS,CAACF,GAAD,EAAMC,MAAN,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEL,IAAlB;AAAwB,QAAA,OAAO,EAAEE,OAAjC;AAA0C,QAAA,GAAG,EAAEE;AAA/C;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlBD;;GAAML,G;;KAAAA,G;;AAoBN,MAAMO,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAoB;AACpC,SACEA,QAAQ,CAACD,KAAK,GAAE,CAAR,CADV;AAGD,CAJD;;MAAMD,S;;AAMN,MAAMG,UAAU,GAAG,CAAC;AAACT,EAAAA,IAAD;AAAOE,EAAAA,OAAP;AAAgBE,EAAAA;AAAhB,CAAD,KAAwB;AACzC,MAAIM,KAAK,GAAGV,IAAI,GAAGE,OAAP,GAAiBE,GAA7B;AACA,MAAIO,gBAAgB,GAAIX,IAAI,GAAGU,KAAR,GAAiB,GAAxC;AACA,MAAIE,OAAO,GAAG,CAACZ,IAAI,GAAGI,GAAR,IAAeM,KAA7B;AAEA,sBACA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,YAEUV,IAFV,oBAEiB;AAAA;AAAA;AAAA;AAAA,YAFjB,eAGaE,OAHb,oBAGuB;AAAA;AAAA;AAAA;AAAA,YAHvB,WAISE,GAJT,oBAIe;AAAA;AAAA;AAAA;AAAA,YAJf,eAIwB;AAAA;AAAA;AAAA;AAAA,YAJxB,WAMSM,KANT,oBAMiB;AAAA;AAAA;AAAA;AAAA,YANjB,qBAOmBE,OAPnB,oBAO6B;AAAA;AAAA;AAAA;AAAA,YAP7B,yBAQuBD,gBARvB,qBAQ2C;AAAA;AAAA;AAAA;AAAA,YAR3C;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYD,CAjBD;;MAAMF,U;AAmBN,eAAeV,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n\n\n  return (\n    <div>\n    <center>\n      <h1>Give your feedback!</h1>\n      <button onClick={()=>Increment(good, setGood)}>Good! :)</button>\n      <button onClick={()=>Increment(neutral, setNeutral)}>Neutral :|</button>\n      <button onClick={()=>Increment(bad, setBad)}>Bad! :(</button>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n      </center>\n    </div>\n  )\n}\n\nconst Increment = (value, setValue) =>{\n  return(\n    setValue(value +1)\n  );\n}\n\nconst Statistics = ({good, neutral, bad})=>{\n  let total = good + neutral + bad;\n  let positiveFeedback = (good / total) * 100;\n  let average = (good - bad) / total;\n\n  return(\n  <div>\n    <h1>Statistics:</h1>\n    Good: { good } <br></br>\n    Neutral: { neutral } <br></br>\n    Bad: { bad } <br></br><br></br>\n\n    All: { total } <br></br>\n    Average score: { average } <br></br>\n    Positive feedback: { positiveFeedback }% <br></br>\n  </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}