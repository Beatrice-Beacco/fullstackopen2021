{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\Desktop\\\\EserciziProgrammazione\\\\React\\\\part2\\\\02phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas'\n  }]);\n  const [newName, setNewName] = useState('');\n\n  const addNewName = event => {\n    event.preventDefault();\n    let content = document.getElementById(\"name\").value;\n    console.log(content);\n    return setNewName(content);\n  };\n\n  const updateList = event => {\n    event.preventDefault();\n    let newElement = {\n      'name': newName\n    };\n    const searchResult = persons.find(element => element === newElement);\n\n    if (searchResult) {\n      console.log(\"Nell'if\");\n      return window.alert(\"This name is already present!\");\n    } else {\n      return setPersons(persons.concat(newElement));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateList,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          onChange: addNewName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n      list: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"aTn020yyTFs05vL+sw6bqJvkaA8=\");\n\n_c = App;\n\nconst Numbers = ({\n  list\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.map(entry => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: entry.name\n      }, entry.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Numbers;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Numbers\");","map":{"version":3,"sources":["C:/Users/Utente/Desktop/EserciziProgrammazione/React/part2/02phonebook/src/App.js"],"names":["React","useState","App","persons","setPersons","name","newName","setNewName","addNewName","event","preventDefault","content","document","getElementById","value","console","log","updateList","newElement","searchResult","find","element","window","alert","concat","Numbers","list","map","entry"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CACrC;AAAEI,IAAAA,IAAI,EAAE;AAAR,GADqC,CAAD,CAAtC;AAGA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAGF,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAA9C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,WAAOJ,UAAU,CAACI,OAAD,CAAjB;AAA2B,GAJ7B;;AAOA,QAAMM,UAAU,GAAIR,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIQ,UAAU,GAAG;AAAE,cAAQZ;AAAV,KAAjB;AACA,UAAMa,YAAY,GAAGhB,OAAO,CAACiB,IAAR,CAAcC,OAAD,IAAcA,OAAO,KAAKH,UAAvC,CAArB;;AACA,QAAIC,YAAJ,EAAkB;AAChBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAOM,MAAM,CAACC,KAAP,CAAa,+BAAb,CAAP;AACD,KAHD,MAGO;AACP,aAAOnB,UAAU,CAACD,OAAO,CAACqB,MAAR,CAAeN,UAAf,CAAD,CAAjB;AACC;AACF,GAVD;;AAYE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAED,UAAhB;AAAA,8BACE;AAAA,0CACQ;AAAO,UAAA,EAAE,EAAC,MAAV;AACN,UAAA,QAAQ,EAAET;AADJ;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEL;AAAf;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1CD;;GAAMD,G;;KAAAA,G;;AA4CN,MAAMuB,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AACzB,sBACE;AAAA,cACCA,IAAI,CAACC,GAAL,CAAUC,KAAD,IAAS;AACjB,0BACA;AAAA,kBACGA,KAAK,CAACvB;AADT,SAASuB,KAAK,CAACvB,IAAf;AAAA;AAAA;AAAA;AAAA,cADA;AAID,KALA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;MAAMoB,O;AAaN,eAAevB,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: 'Arto Hellas' }\n  ])\n  const [newName, setNewName] = useState('')\n\n\nconst addNewName = (event) => {\n  event.preventDefault()\n  let content = document.getElementById(\"name\").value\n  console.log(content);\n  return setNewName(content)}\n\n\nconst updateList = (event) => {\n  event.preventDefault();\n  let newElement = { 'name': newName }\n  const searchResult = persons.find((element) => (element === newElement))\n  if (searchResult) {\n    console.log(\"Nell'if\");\n    return(window.alert(\"This name is already present!\"))\n  } else {\n  return setPersons(persons.concat(newElement))\n  }\n}\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form onSubmit={updateList}>\n        <div>\n          Name: <input id=\"name\" \n          onChange={addNewName} />\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <Numbers list={persons}/>\n    </div>\n  )\n}\n\nconst Numbers = ({list}) =>{\n  return(\n    <div>\n    {list.map((entry)=>{\n      return(\n      <li key={entry.name}>\n        {entry.name}\n      </li>)\n    })}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}