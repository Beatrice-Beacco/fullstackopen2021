{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\Desktop\\\\EserciziProgrammazione\\\\React\\\\part2\\\\02phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Numbers from './components/Numbers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //States\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]); //list of total entries\n\n  const [newName, setNewName] = useState(''); //name input field\n\n  const [newNumber, setNewNumber] = useState(''); //number input field\n\n  const [searchResults, setSearchResults] = useState([]); //search input field\n  //\n\n  const addNew = (event, handleState, id) => {\n    console.log(handleState);\n    event.preventDefault();\n    let content = document.getElementById(id).value;\n    console.log(content);\n    return handleState(content);\n  };\n\n  const updateList = event => {\n    event.preventDefault();\n    const personSearch = persons.find(element => element['name'] === newName);\n\n    if (personSearch) {\n      return window.alert('The name ' + newName + ' is already present!');\n    } else {\n      if (newName && newNumber) {\n        return setPersons(persons.concat({\n          'name': newName,\n          'number': newNumber\n        }));\n      } else {\n        return window.alert('Please, complete both fields!');\n      }\n    }\n  };\n\n  const searchList = () => {\n    let searched = document.getElementById(\"search\").value;\n    let results = persons.filter(element => {\n      return element['name'].search(searched) > -1 ? true : false;\n    });\n    return setSearchResults(results);\n  }; //Creo componenti che renderizzano l'interfaccia utente\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      onChange: searchList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 49\n    }, this), \"Results: \", /*#__PURE__*/_jsxDEV(FoundResults, {\n      results: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateList,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        text: \"Name\",\n        id: \"name\",\n        updateFunction: addNew,\n        stateHandler: setNewName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        text: \"Number\",\n        id: \"number\",\n        updateFunction: addNew,\n        stateHandler: setNewNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n      list: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VfXf6cunM7qEvBp8MmWe76ff+Ho=\");\n\n_c = App;\n\nconst FoundResults = ({\n  results\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: results.map(entry => {\n      return ' --- ' + entry['name'] + ': ' + entry['number'];\n    })\n  }, void 0, false);\n};\n\n_c2 = FoundResults;\n\nconst Field = ({\n  text,\n  id,\n  updateFunction,\n  stateHandler\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \": \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      onChange: e => updateFunction(e, stateHandler, id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Field;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"FoundResults\");\n$RefreshReg$(_c3, \"Field\");","map":{"version":3,"sources":["C:/Users/Utente/Desktop/EserciziProgrammazione/React/part2/02phonebook/src/App.js"],"names":["React","useState","Numbers","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","searchResults","setSearchResults","addNew","event","handleState","id","console","log","preventDefault","content","document","getElementById","value","updateList","personSearch","find","element","window","alert","concat","searchList","searched","results","filter","search","FoundResults","map","entry","Field","text","updateFunction","stateHandler","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Numbers from './components/Numbers'\n\nconst App = () => {\n//States\nconst [persons, setPersons] = useState([\n  { name: 'Arto Hellas', number: '040-123456' },\n  { name: 'Ada Lovelace', number: '39-44-5323523' },\n  { name: 'Dan Abramov', number: '12-43-234345' },\n  { name: 'Mary Poppendieck', number: '39-23-6423122' }\n]) //list of total entries\nconst [newName, setNewName] = useState('') //name input field\nconst [newNumber, setNewNumber] = useState('') //number input field\nconst [searchResults, setSearchResults] = useState([]) //search input field\n\n//\nconst addNew = (event, handleState, id) => {\n  console.log(handleState)\n  event.preventDefault()\n  let content = document.getElementById(id).value\n  console.log(content);\n\n  return handleState(content)\n}\n\n\nconst updateList = (event) => {\n  event.preventDefault();\n\n  const personSearch = persons.find((element) => (element['name'] === newName))\n\n  if (personSearch) {\n    return(window.alert('The name ' + newName + ' is already present!'))\n  } else {\n    if(newName && newNumber){\n    return setPersons(persons.concat({ 'name': newName, 'number': newNumber}))\n    } else {\n      return (window.alert('Please, complete both fields!'))\n    }\n  }\n}\n\nconst searchList = () => {\n  let searched = document.getElementById(\"search\").value\n  let results = persons.filter((element)=>{\n   return (element['name'].search(searched)> -1) ? true : false\n  })\n  return setSearchResults(results)\n}\n\n//Creo componenti che renderizzano l'interfaccia utente\n  return (\n    <div>\n      <center><h1>Phonebook</h1></center>\n      <h2>Search</h2>\n      <input id=\"search\" onChange={searchList}/><br/>\n      Results: {<FoundResults results={searchResults}/>}\n      <h2>Add New</h2>\n      <form onSubmit={updateList}>\n        <Field text=\"Name\" id=\"name\" updateFunction={addNew} stateHandler={setNewName}/>\n        <Field text=\"Number\" id=\"number\" updateFunction={addNew} stateHandler={setNewNumber}/>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <Numbers list={persons}/>\n    </div>\n  )\n}\n\n\n\nconst FoundResults = ({results}) => {\n  return(\n    <>\n    {results.map((entry)=>{\n      return ' --- ' + entry['name'] + ': ' + entry['number']})}\n    </>\n  )\n  }\n\nconst Field = ({text, id, updateFunction, stateHandler}) => {\n  return(\n    <div>\n      {text}: <input id={id} onChange ={(e) => updateFunction(e, stateHandler, id)} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}