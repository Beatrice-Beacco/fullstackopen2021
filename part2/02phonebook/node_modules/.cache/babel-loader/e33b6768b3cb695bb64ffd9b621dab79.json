{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utente\\\\Desktop\\\\EserciziProgrammazione\\\\React\\\\part2\\\\02phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //Import my components\n\nimport Numbers from './components/Numbers';\nimport FoundResults from './components/FoundResults';\nimport Field from './components/Field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //States\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]); //list of total entries\n\n  const [newName, setNewName] = useState(''); //name input field\n\n  const [newNumber, setNewNumber] = useState(''); //number input field\n\n  const [searchResults, setSearchResults] = useState([]); //search input field\n  //Receives the event to use preventDefault, the function to change the desired state\n  //and the ID of the field to get the user imput\n  //Returns the action of setting the content of the user input to the respective state\n  //of the state handler function\n\n  const addNew = (event, handleState, id) => {\n    event.preventDefault();\n    let content = document.getElementById(id).value;\n    return handleState(content);\n  }; //Searches the array with find to see if the user input set in newName aldready exists\n  //in the array\n  //If a result is returned, returns a popup to alert the user\n  //If undefined is returned: \n  //If both user inputs are set, both are added to the persons array through the concat\n  //method and set to the state through the state handler function\n  //If one or both inputs are not set, returns a popup to alert the user\n\n\n  const updateList = event => {\n    event.preventDefault();\n    const personSearch = persons.find(element => element['name'] === newName);\n\n    if (personSearch) {\n      return window.alert('The name ' + newName + ' is already present!');\n    } else {\n      if (newName && newNumber) {\n        return setPersons(persons.concat({\n          'name': newName,\n          'number': newNumber\n        }));\n      } else {\n        return window.alert('Please, complete both fields!');\n      }\n    }\n  }; //Gets the user imput from the search filed, and filters the persons array. If at least\n  //a match is found in each element through the search method, returns true.\n  //At the end sets the searchResults state with the filtered array.\n\n\n  const searchList = () => {\n    let searched = document.getElementById(\"search\").value;\n    let results = persons.filter(element => {\n      return element['name'].search(searched) > -1 ? true : false;\n    });\n    return setSearchResults(results);\n  }; //Renders all components and fields\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search\",\n      onChange: searchList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 49\n    }, this), \"Results: \", /*#__PURE__*/_jsxDEV(FoundResults, {\n      results: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateList,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        text: \"Name\",\n        id: \"name\",\n        updateFunction: addNew,\n        stateHandler: setNewName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        text: \"Number\",\n        id: \"number\",\n        updateFunction: addNew,\n        stateHandler: setNewNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n      list: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VfXf6cunM7qEvBp8MmWe76ff+Ho=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Utente/Desktop/EserciziProgrammazione/React/part2/02phonebook/src/App.js"],"names":["React","useState","Numbers","FoundResults","Field","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","searchResults","setSearchResults","addNew","event","handleState","id","preventDefault","content","document","getElementById","value","updateList","personSearch","find","element","window","alert","concat","searchList","searched","results","filter","search"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n//Import my components\nimport Numbers from './components/Numbers'\nimport FoundResults from './components/FoundResults'\nimport Field from './components/Field'\n\nconst App = () => {\n//States\nconst [persons, setPersons] = useState([\n  { name: 'Arto Hellas', number: '040-123456' },\n  { name: 'Ada Lovelace', number: '39-44-5323523' },\n  { name: 'Dan Abramov', number: '12-43-234345' },\n  { name: 'Mary Poppendieck', number: '39-23-6423122' }\n]) //list of total entries\nconst [newName, setNewName] = useState('') //name input field\nconst [newNumber, setNewNumber] = useState('') //number input field\nconst [searchResults, setSearchResults] = useState([]) //search input field\n\n//Receives the event to use preventDefault, the function to change the desired state\n//and the ID of the field to get the user imput\n//Returns the action of setting the content of the user input to the respective state\n//of the state handler function\nconst addNew = (event, handleState, id) => {\n  event.preventDefault()\n  let content = document.getElementById(id).value\n\n  return handleState(content)\n}\n\n//Searches the array with find to see if the user input set in newName aldready exists\n//in the array\n//If a result is returned, returns a popup to alert the user\n//If undefined is returned: \n//If both user inputs are set, both are added to the persons array through the concat\n//method and set to the state through the state handler function\n//If one or both inputs are not set, returns a popup to alert the user\nconst updateList = (event) => {\n  event.preventDefault();\n\n  const personSearch = persons.find((element) => (element['name'] === newName))\n\n  if (personSearch) {\n    return(window.alert('The name ' + newName + ' is already present!'))\n  } else {\n    if(newName && newNumber){\n    return setPersons(persons.concat({ 'name': newName, 'number': newNumber}))\n    } else {\n      return (window.alert('Please, complete both fields!'))\n    }\n  }\n}\n\n//Gets the user imput from the search filed, and filters the persons array. If at least\n//a match is found in each element through the search method, returns true.\n//At the end sets the searchResults state with the filtered array.\nconst searchList = () => {\n  let searched = document.getElementById(\"search\").value\n  let results = persons.filter((element)=>{\n   return (element['name'].search(searched) > -1) ? true : false\n  })\n  return setSearchResults(results)\n}\n\n//Renders all components and fields\n  return (\n    <div>\n      <center><h1>Phonebook</h1></center>\n      <h2>Search</h2>\n      <input id=\"search\" onChange={searchList}/><br/>\n      Results: {<FoundResults results={searchResults}/>}\n      <h2>Add New</h2>\n      <form onSubmit={updateList}>\n        <Field text=\"Name\" id=\"name\" updateFunction={addNew} stateHandler={setNewName}/>\n        <Field text=\"Number\" id=\"number\" updateFunction={addNew} stateHandler={setNewNumber}/>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <Numbers list={persons}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}